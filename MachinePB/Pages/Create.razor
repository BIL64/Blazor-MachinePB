@page "/create"
@inject ILogger<Create> Logger
@inject NavigationManager NavManager

<PageTitle>Add machine</PageTitle>

<h5>Add machine</h5>

<div>
    <EditForm Model="@machine" OnSubmit="@HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group m-md-3">            
            <label class="control-label">
                Location:<span class="fault">@Lfault</span>
                <InputText type="text" class="form-control" @bind-Value="machine.Location" />
            </label>
        </div>
        <div class="form-group m-md-3">
            <label class="control-label">
                Installation date:<span class="fault">@Dfault</span>
                <InputText type="text" class="form-control" @bind-Value="machine.Date" />
            </label>
        </div>
        <div class="form-group m-md-3">
            <label class="control-label">
                Type:<span class="fault">@Tfault</span>
                <InputText type="text" class="form-control" @bind-Value="machine.Type" />
            </label>
        </div>
        <div class="form-group m-md-3">
            <NavLink href="fetchdata"><button type="button" class="btn btn-info btn-sm mt-2">REGRET</button></NavLink>&nbsp;
            <button type="submit" class="btn btn-primary btn-sm mt-2" title="Submit changes">OK</button>
        </div>
    </EditForm>
</div>


@code {

    private Machine machine = new();

    [Inject]
    private IMachClient machClient { get; set; } = default!;

    private string Lfault { get; set; } = string.Empty;
    private string Dfault { get; set; } = string.Empty;
    private string Tfault { get; set; } = string.Empty;

    private async Task HandleSubmit()
    {
        Logger.LogInformation("HandleSubmit called");

        if (machine.Location != "" && machine.Date != "" && machine.Type != "")
        {
            machine.DateTimeCreate = DateTime.UtcNow;

            if (machine is null)
            {
                throw new ArgumentNullException(nameof(machine));
            }

            await machClient.PostAsync(machine);
            Auxx.IsEdit = true;
            NavManager.NavigateTo("/fetchdata");
        }
        else
        {
            if (machine.Location == "") Lfault = " Required field..."; else Lfault = "";
            if (machine.Date == "") Dfault = " Required field..."; else Dfault = "";
            if (machine.Type == "") Tfault = " Required field..."; else Tfault = "";
        }
    }
}
